#### #### #### #### #### #### #### #### #### #### #### #### #### #### #### #### #### #### #### #### #### #### ####
#
# PROMOX INIT INFRASTRUCTURE - ADMIN
#
#   hostname : admin-web-api-kong
#   vm_id    : 1020
#   cpu core : 1
#   ram      : 4g
#   disk     : 32g
#   ip       : 192.168.42.120
#
#   template : template-vm-small-01-4g-32g - id : 9221
#
#### #### #### #### #### #### #### #### #### #### #### #### #### #### #### #### #### #### #### #### #### #### ####

##
## ISSUE - 6
##

- hosts: px-testing
  gather_facts: false
  vars_files:
    - "../secrets/px-testing.cr42_tailscale.yaml"

  vars:
    global_vm_id: 1020
    global_vm_name: "admin-web-api-kong"
    global_vm_description: ""
    global_vm_tag_name: "admin"
    global_vm_ci_ip: "192.168.42.120"
    #
    global_template_vm_id: 9221
    global_template_name: "template-vm-small-01-4g-32g - id : 9221" # debug

  tasks:
    #### #### #### #### #### #### #### #### #### #### #### #### #### #### #### #### #### #### #### #### #### #### ####

    - name: ADMIN INFRASTRUCTURE INIT - "{{ global_vm_name }}" - CLONE TEMPLATE - "{{ global_template_name }}"

      include_role:
        name: range42-ansible_roles-proxmox_controller

      vars:
        proxmox_vm_action: "vm_clone"
        vm_id: "{{ global_template_vm_id }}" # TEMPLATE VM_ID - vars should be rename to vm_id_src / vm_id_dst
        vm_new_id: "{{ global_vm_id }}"
        vm_name: "{{ global_vm_name }}"
        vm_description: "{{ global_vm_description }}"

    #
    - name: ADMIN INFRASTRUCTURE INIT - "{{ global_vm_name }}" - SET PROMOX TAG

      include_role:
        name: range42-ansible_roles-proxmox_controller

      vars:
        proxmox_vm_action: "vm_set_tag"
        vm_id: "{{ global_vm_id }}"
        vm_tag_name: "{{ global_vm_tag_name }}"

    #### #### #### #### #### #### #### #### #### #### #### #### #### #### #### #### #### #### #### #### #### #### ####

    - name: ADMIN INFRASTRUCTURE INIT - "{{ global_vm_name }}" - SET CLOUD DEFAULT INIT VARIABLE

      include_role:
        name: range42-ansible_roles-proxmox_controller

      vars:
        proxmox_vm_action: "cloudinit_set_variables"

        vm_id: "{{ global_vm_id }}"
        vm_ci_user: "{{ default_admin_vm_ci_user | default('alice') }}"
        vm_ci_password: "{{ default_admin_vm_ci_password | default('supersecret') }}"
        vm_ci_ssh_key: "{{ default_admin_vm_ci_ssh_key  }}"
        vm_ci_namerserver_ips: "1.1.1.1"
        vm_ci_ip: "{{ global_vm_ci_ip }}"
        vm_ci_netmask: "24"
        vm_ci_ip_gw: "192.168.42.1"

    #
    - name: ADMIN INFRASTRUCTURE INIT - "{{ global_vm_name }}" - CLONE TEMPLATE - START VM

      include_role:
        name: range42-ansible_roles-proxmox_controller

      vars:
        proxmox_vm_action: "vm_start"
        vm_id: "{{ global_vm_id }}"

    # #### #### #### #### #### #### #### #### #### #### #### #### #### #### #### #### #### #### #### #### #### #### ####

- hosts: "{{ global_vm_ssh_name }}"

  gather_facts: false

  tasks:
    ##
    ## ISSUE - 7
    ##

    #### THE FOLLOWING WILL NOT WORK  FOR  PROXYJUMP HOSTS
    ####

    # - name: WAIT FOR SSH
    #   wait_for:
    #     # host: "{{ global_vm_ssh_name }}" # THIS WILL NOT WORK - we must the IP + PORT => ssh config will not considered for this test.
    #     host: "{{ global_vm_ci_ip }}"
    #     port: 22
    #     delay: 5
    #     timeout: 300
    #   delegate_to: localhost # must be perform from admin OS

    # - name: ADD SSH FINGERPPRINT TO LOCAL known_hosts FILE

    #   # shell: "ssh-keyscan -H {{ global_vm_ci_ip }} >> {{ global_operator_ssh_config_known_hosts }}"

    #   shell: >
    #     ssh -o StrictHostKeyChecking=accept-new
    #         -o UserKnownHostsFile={{ global_operator_ssh_config_known_hosts }}
    #         -o BatchMode=yes
    #         {{ global_vm_ssh_name }} exit

    - name: WAIT FOR SSH - VIA ProxyJump
      shell: >
        ssh
        -o BatchMode=yes
        -o ConnectTimeout=5
        -o StrictHostKeyChecking=accept-new
        -o UserKnownHostsFile={{ global_operator_ssh_config_known_hosts }}
        {{ global_vm_ssh_name }} true
      register: ssh_check
      retries: 60
      delay: 5
      until: ssh_check.rc == 0
      ignore_errors: true
      delegate_to: localhost

    # CLASSIC WAY - ONLY WORK WITHOUT PROXY JUMP.
    #
    #
    #
    # - name: Debug SSH connection output
    #   debug:
    #     var: ssh_check

    #   # ansible.builtin.known_hosts:
    #   #   name: "{{ global_vm_ci_ip }}"
    #   #   key: "{{ lookup('pipe', 'ssh-keyscan -H ' + global_vm_ci_ip) }}"
    #   #   path: "{{ global_operator_ssh_config_known_hosts }}"

    #   delegate_to: localhost

    # #### #### #### #### #### #### #### #### #### #### #### #### #### #### #### #### #### #### #### #### #### #### ####

- hosts: "{{ global_vm_ssh_name }}"

  gather_facts: true
  become: true

  tasks:
    ##
    ## ISSUE - 7
    ##

    - name: CLOUD INIT - WAIT END OF SETUP
      wait_for:
        path: /var/lib/cloud/instance/boot-finished
        state: present
        delay: 10 # WAIT FOR 10seconds
        timeout: 500 # MAX 5 min


    # - name: install basics packages

    #   include_role:
    #     name: software.install.warmup.basic_packages
    #   vars:
    #     OPERATOR_USER: grml
    #     # REBOOT_AFTER_UPDATES: "NO"
    #     # INSTALL_PACKAGES_NTP_AND_UPDATE_TIME: "YES"
    #     INSTALL_PACKAGES_BASICS: "YES"
    #     # INSTALL_PACKAGES_NETWORK_ANALYSIS: "YES"
    #     # INSTALL_PACKAGES_FIREWALLS: "YES"
    #     # INSTALL_PACKAGES_JSON_ANALYSIS: "YES"
    #     # INSTALL_PACKAGES_DOCKER_AND_DOCKER_COMPOSE: "NO"
